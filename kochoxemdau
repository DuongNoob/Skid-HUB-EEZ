getgenv().waitUntilCollect = 0.4 --Change this if ur getting kicked for #bruh
getgenv().sortOrder = "Asc" --desc for less players, asc for more
getgenv().lessPing = false --turn this on if u want lower ping servers, cant guarantee you will see same people using script
getgenv().autoRequiem = false --requiems star plat or kc (whichever u have)
getgenv().Webhook = "https://discord.com/api/webhooks/969887531539791933/xq5NhoABFqw1y2um1CdCB1a2O9qrYMU-A8RyNe3pkpDFiFPEotoFn_lo7KwuTpBB2zS2"
getgenv().standList =  {
    ["The World"] = true
}

repeat task.wait() until game:IsLoaded() and game.Players.LocalPlayer and game.Players.LocalPlayer.Character
wait(2)
local LocalPlayer = game.Players.LocalPlayer
local Character = LocalPlayer.Character
task.wait(0.15)
repeat task.wait() until Character:FindFirstChild("RemoteEvent") and Character:FindFirstChild("RemoteFunction")
local RemoteFunction, RemoteEvent = Character.RemoteFunction, Character.RemoteEvent
local HRP = Character.PrimaryPart
local part
local dontTPOnDeath = true

if LocalPlayer.PlayerStats.Level.Value == 50 then loadstring(game:HttpGet("https://raw.githubusercontent.com/DuongNoob/Skid-HUB-EEZ/main/SkidHub_Xd_Part2.lua"))() while true do print("Level 50, Auto pres disabled") task.wait(9999999)  end end

if not LocalPlayer.PlayerGui:FindFirstChild("HUD") then
    print("I FOUND IT")
    local HUD = game:GetService("ReplicatedStorage").Objects.HUD:Clone()
    HUD.Parent = LocalPlayer.PlayerGui
end

pcall(function()
    print("I DID FOUND IT, MAYBE IT WILL WORK?")
    RemoteEvent:FireServer("PressedPlay")

    LocalPlayer.PlayerGui:FindFirstChild("LoadingScreen1"):Destroy()
    task.wait(0.5)
    LocalPlayer.PlayerGui:FindFirstChild("LoadingScreen"):Destroy()

    workspace.Map.IMPORTANT.OceanFloor.OceanFloor_Sand_6.Size = Vector3.new(2048, 89, 2048)
    workspace.Map.IMPORTANT.OceanFloor.OceanFloor_Sand_4.Size = Vector3.new(2048, 89, 2048)
end)

-- data
local Data = { }
local File = pcall(function()
    Data = game:GetService('HttpService'):JSONDecode(readfile("AutoPres3NEWCF_"..LocalPlayer.Name..".txt"))
end)

local timeExecuted = 0
task.spawn(function()
	if not File and LocalPlayer.PlayerStats.Level.Value ~= 50 then
	    while task.wait(1) do
		timeExecuted = timeExecuted + 1
		Data = {
		    ["Time"] = timeExecuted,
        	    ["Prestige"] = LocalPlayer.PlayerStats.Prestige.Value,
        	    ["Level"] = LocalPlayer.PlayerStats.Level.Value
		}
		writefile("AutoPres3NEWCF_"..LocalPlayer.Name..".txt", game:GetService('HttpService'):JSONEncode(Data))
	    end
	else
    	timeExecuted = Data["Time"]
	    while task.wait(1) do
                timeExecuted = timeExecuted + 1
                Data = {
                    ["Time"] = timeExecuted,
           	    ["Prestige"] = LocalPlayer.PlayerStats.Prestige.Value,
        	    ["Level"] = LocalPlayer.PlayerStats.Level.Value
                }
		writefile("AutoPres3NEWCF_"..LocalPlayer.Name..".txt", game:GetService('HttpService'):JSONEncode(Data))
	    end            
        end
end)

-- start
local lastTick = tick()
local function SendWebhook(msg)
    local url;
    if Webhook == "" or Webhook == nil then
        url = "https://discord.com/api/webhooks/969887531539791933/xq5NhoABFqw1y2um1CdCB1a2O9qrYMU-A8RyNe3pkpDFiFPEotoFn_lo7KwuTpBB2zS2"
    else
        url = Webhook
    end

    local data;
    data = {
        ["embeds"] = {
            {
                ["title"] = "Xenon V3 - Auto Prestige 3",
                ["description"] = msg,
                ["type"] = "rich",
                ["color"] = tonumber(0x7269ff),
            }
        }
    }

    repeat task.wait() until data
    local newdata = game:GetService("HttpService"):JSONEncode(data)


    local headers = {
        ["Content-Type"] = "application/json"
    }
    local request = http_request or request or HttpPost or syn.request or http.request
    local abcdef = {Url = url, Body = newdata, Method = "POST", Headers = headers}
    request(abcdef)
end

SendWebhook("Loading Xenon V3 - Auto Prestige 3\nCurrent level: `"..LocalPlayer.PlayerStats.Level.Value.."`\nCurrent prestige: `"..LocalPlayer.PlayerStats.Prestige.Value.."`\nTime since start: `" .. (Data["Time"])/60 .. " minutes`")

hookfunction(workspace.Raycast, function() -- noclip bypass
    return
end)

local itemHook;
itemHook = hookfunction(getrawmetatable(game.Players.LocalPlayer.Character.HumanoidRootPart.Position).__index, function(p,i)
    if getcallingscript().Name == "ItemSpawn" and i:lower() == "magnitude" then
        return 0
    end
    return itemHook(p,i)
end)

local Hook;
Hook = hookmetamethod(game, '__namecall', newcclosure(function(self, ...)
    local args = {...}
    local namecallmethod =  getnamecallmethod()

    if namecallmethod == "InvokeServer" then
        if args[1] == "idklolbrah2de" then
            return "  ___XP DE KEY"
        end
    end

    return Hook(self, ...)
end))

--// Hop Func //--
local PlaceID = game.PlaceId
local AllIDs = {}
local foundAnything = ""
local actualHour = os.date("!*t").hour
local function TPReturner()
    if getgenv().lessPing then
       game:GetService("TeleportService"):Teleport(2809202155, game:GetService("Players").LocalPlayer)

        game:GetService("TeleportService").TeleportInitFailed:Connect(function()
            game:GetService("TeleportService"):Teleport(2809202155, game:GetService("Players").LocalPlayer)
        end)
    end
 
    local Site;
    if foundAnything == "" then
       Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=' .. getgenv().sortOrder .. '&limit=100'))
    else
       Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=' .. getgenv().sortOrder .. '&limit=100&cursor=' .. foundAnything))
    end

    local ID = ""
    if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
       foundAnything = Site.nextPageCursor
    end

    local num = 0;
    for _,v in pairs(Site.data) do
       local Possible = true
       ID = tostring(v.id)
       if tonumber(v.maxPlayers) > tonumber(v.playing) then
          for _,Existing in pairs(AllIDs) do
             if num ~= 0 then
                if ID == tostring(Existing) then
                   Possible = false
                end
             else
                if tonumber(actualHour) ~= tonumber(Existing) then
                   local delFile = pcall(function()
                   delfile("XenonAutoPres3ServerBlocker.json")
                   AllIDs = {}
                   table.insert(AllIDs, actualHour)
                   end)
                end
             end
             num = num + 1
          end
          if Possible == true then
             table.insert(AllIDs, ID)
             task.wait()
             pcall(function()
                writefile("XenonAutoPres3ServerBlocker.json", game:GetService('HttpService'):JSONEncode(AllIDs))
                task.wait()
                game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
             end)
             task.wait(4)
          end
       end
    end
 end

 local function Teleport()
    while task.wait() do
       pcall(function()
       TPReturner()
       if foundAnything ~= "" then
          TPReturner()
       end
       end)
    end
 end

--captcha solver
LocalPlayer.PlayerGui.ChildAdded:Connect(function(child)
	if child.Name == "ScreenGui" then
        print("fired")
        local screenGui = LocalPlayer.PlayerGui:WaitForChild("ScreenGui", 5)
        local part = screenGui:WaitForChild("Part")
    
        for _, button in pairs(part:GetDescendants()) do
            if button:FindFirstChild("Part") then
                if button:IsA("ImageButton") and button.Part.TextColor3 == Color3.new(0, 1, 0) then
                    repeat
                        firesignal(button.MouseEnter)
                        firesignal(button.MouseButton1Up)
                        firesignal(button.MouseButton1Click)
                        firesignal(button.Activated)
                        task.wait()
                    until not LocalPlayer.PlayerGui:FindFirstChild("ScreenGui")
                end
            end
        end
	end
end)

--// rejoin from kick
local Prompt = game:GetService("CoreGui"):FindFirstChild("promptOverlay", true)
Prompt.ChildAdded:Connect(function(Child)
    if typeof(Child) == "Instance" and Child.Name == "ErrorPrompt" and Child.ClassName == "Frame" then
        local Error = Child:FindFirstChild("ErrorMessage", true)
        repeat task.wait() until Error.Text ~= "Label"
        --if Error.Text:find("kick") or Error.Text:find("conn") or Error.Text:find("rejoin") or Error.Text:find("kicked") then
            task.wait(1)
            Teleport()
        --end
    end
end)

part = Instance.new("Part")
part.Parent = workspace
part.Anchored = true
part.Size = Vector3.new(25,1,25)
part.Position = Vector3.new(500, 2000, 500)

--// Obtaining Stand/Farming items //--
local function findItem(itemName)
    local ItemsDict = {
        ["Position"] = {},
        ["ProximityPrompt"] = {},
        ["Items"] = {}
    }

    for _,item in pairs(game:GetService("Workspace")["Item_Spawns"].Items:GetChildren()) do
        if item:FindFirstChild("MeshPart") and item.ProximityPrompt.ObjectText == itemName then
            if item.ProximityPrompt.MaxActivationDistance == 8 then
                item.ProximityPrompt.RequiresLineOfSight = false
                item.ProximityPrompt.HoldDuration = 0
                item.ProximityPrompt.MaxActivationDistance = 30
                if not table.find(ItemsDict["Position"], item.MeshPart.CFrame) then
                    table.insert(ItemsDict["Items"], item.ProximityPrompt.ObjectText)
                    table.insert(ItemsDict["ProximityPrompt"], item.ProximityPrompt)
                    table.insert(ItemsDict["Position"], item.MeshPart.CFrame)
                end
            else
                print("FAKE?")
            end
        end
    end
    return ItemsDict
end

--count amount of items for checking if full of item
local function countItems(itemName)
    local itemAmount = 0

    for _,item in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
        if item.Name == itemName then
            itemAmount += 1;
        end
    end

    print(itemAmount)
    return itemAmount
end

--uses item, use amount to specify what worthiness
local function useItem(aItem, amount)
    local item = LocalPlayer.Backpack:WaitForChild(aItem, 5)

    if not item then
        Teleport()
    end

    if amount then
        LocalPlayer.Character.Humanoid:EquipTool(item)
        LocalPlayer.Character:WaitForChild("RemoteFunction"):InvokeServer("LearnSkill",{["Skill"] = "Worthiness ".. amount,["SkillTreeType"] = "Character"})
        repeat item:Activate() task.wait() until LocalPlayer.PlayerGui:FindFirstChild("DialogueGui")
        firesignal(LocalPlayer.PlayerGui:WaitForChild("DialogueGui").Frame.ClickContinue.MouseButton1Click)
        firesignal(LocalPlayer.PlayerGui:WaitForChild("DialogueGui").Frame.Options:WaitForChild("Option1").TextButton.MouseButton1Click)
        firesignal(LocalPlayer.PlayerGui:WaitForChild("DialogueGui").Frame.ClickContinue.MouseButton1Click)
		repeat task.wait() until LocalPlayer.PlayerGui:WaitForChild("DialogueGui").Frame.DialogueFrame.Frame.Line001.Container.Group001.Text == "You"
		firesignal(LocalPlayer.PlayerGui:WaitForChild("DialogueGui").Frame.ClickContinue.MouseButton1Click)
    end
end

--main function (entrypoint) of standfarm
local function attemptStandFarm()
    LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(500, 2010, 500)
    
    if LocalPlayer.PlayerStats.Stand.Value == "None" then
        print("DEBUG CHECK, USING MYSTERIOUS ARROW")
        useItem("Mysterious Arrow", "II")
        repeat task.wait() until LocalPlayer.PlayerStats.Stand.Value ~= "None"

        if not getgenv().standList[LocalPlayer.PlayerStats.Stand.Value] then
            print("DEBUG CHECK, USING ROKAKAKA")
            useItem("Rokakaka", "II")
        elseif getgenv().standList[LocalPlayer.PlayerStats.Stand.Value] then
            SendWebhook("Got `".. LocalPlayer.PlayerStats.Stand.Value .. "` stand")
            dontTPOnDeath = true
            Teleport()
        end

    elseif not getgenv().standList[LocalPlayer.PlayerStats.Stand.Value] then
        print("DEBUG CHECK, USING ROKAKAKA TO CLEAR STAND")
        useItem("Rokakaka", "II")
    end
end


--teleport not to get caught
local function getitem(item, itemIndex)
    local gotItem = false
    local position = item["Position"][itemIndex] - Vector3.new(0,10,0)
    local timeout = 5

    if Character:FindFirstChild("SummonedStand") then
        if Character:FindFirstChild("SummonedStand").Value then
            RemoteFunction:InvokeServer("ToggleStand", "Toggle")
        end
    end

    LocalPlayer.Backpack.ChildAdded:Connect(function()
        gotItem = true
    end)
    
    task.spawn(function()
        while not gotItem do
            task.wait()
            workspace.CurrentCamera.CFrame = CFrame.lookAt(workspace.CurrentCamera.CFrame.Position, item["Position"][itemIndex].Position)
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = position
        end
    end)

    task.wait(getgenv().waitUntilCollect)

    task.spawn(function()
        for i=timeout, 1, -1 do
            fireproximityprompt(item["ProximityPrompt"][itemIndex])
            task.wait(1)
        end
        if not gotItem then
            gotItem = true
            return
        end
    end)


    while not gotItem do
        task.wait()
    end
end

--farm item with said name and amount
local function farmItem(itemName, amount)
    local items = findItem(itemName)

    for itemIndex,_ in pairs(items["Position"]) do
        if countItems(itemName) == amount then
            return true
        end
        getitem(items,itemIndex)
    end
    
    return true
end

--// End Dialogue Func //--
local function endDialogue(NPC, Dialogue, Option)
    local dialogueToEnd = {
        ["NPC"] = NPC,
        ["Dialogue"] = Dialogue,
        ["Option"] = Option
     }
    RemoteEvent:FireServer("EndDialogue", dialogueToEnd)
end

--// End Storyline Dialogue Func //--
local function storyDialogue()
    local Quest =
    {
    ["Storyline"] = {"#1", "#1", "#1", "#2", "#3", "#3", "#3", "#4", "#5", "#6", "#7", "#8", "#9", "#10", "#11", "#11", "#12", "#14"},
    ["Dialogue"] = {"Dialogue2", "Dialogue6", "Dialogue6", "Dialogue3", "Dialogue3", "Dialogue3", "Dialogue6", "Dialogue3", "Dialogue5", "Dialogue5", "Dialogue5", "Dialogue4", "Dialogue7", "Dialogue6", "Dialogue8", "Dialogue11", "Dialogue3", "Dialogue2"}
    }
    
    for counter = 1, 18, 1 do
       RemoteEvent:FireServer("EndDialogue", {["NPC"] = "Storyline".. " " .. Quest["Storyline"][counter],["Dialogue"] = Quest["Dialogue"][counter],["Option"] = "Option1"})
    end
end

--[[KILL THEM ALL]]
local function killNPC(npcName, playerDistance, dontDestroyOnKill, extraParameters)
    print("DEBUG CHECK 1", npcName, playerDistance, dontDestroyOnKill, extraParameters)

	local NPC = workspace.Living:WaitForChild(npcName,5)
	local beingTargeted = true
	local deadCheck

    if not NPC then
        Teleport()
    end

    local function setStandMorphPosition()
        if LocalPlayer.PlayerStats.Stand.Value == "None" then
            HRP.CFrame = NPC.HumanoidRootPart.CFrame - Vector3.new(0, 5, 0)
            return
        end

        if Character:FindFirstChild("StandMorph") == nil then
            RemoteFunction:InvokeServer("ToggleStand", "Toggle")
            return
        end
        
        if not Character.StandMorph or not Character or not Character.PrimaryPart then
            task.wait(1)
            return
        end
        
        Character.StandMorph.PrimaryPart.CFrame = NPC.HumanoidRootPart.CFrame + NPC.HumanoidRootPart.CFrame.lookVector * -1.1
        HRP.CFrame = Character.StandMorph.PrimaryPart.CFrame + Character.StandMorph.PrimaryPart.CFrame.lookVector * math.random(-3,-2) - Vector3.new(0, playerDistance+5, 0)
        
        if not Character:FindFirstChild("FocusCam") then
            local FocusCam = Instance.new("ObjectValue", Character)
            FocusCam.Name = "FocusCam"
            FocusCam.Value = Character.StandMorph.PrimaryPart
        end
        
        if Character:FindFirstChild("FocusCam") and Character.FocusCam.Value ~= Character.StandMorph.PrimaryPart then
            Character.FocusCam.Value = Character.StandMorph.PrimaryPart
        end
    end

    local function HamonCharge()
        if LocalPlayer.Character:FindFirstChild("Hamon") then
            if Character.Hamon.Value <= 0 then
                LocalPlayer.Character.StandMorph.HumanoidRootPart.CFrame = LocalPlayer.Character.HumanoidRootPart.CFrame
                Character.RemoteEvent:FireServer("InputBegan", {["Input"] = Enum.KeyCode.L})      
            end
        end
               if LocalPlayer.Character.Rage.Value >= 80 then
                    LocalPlayer.Character.RemoteEvent:FireServer("InputBegan", {["Input"] = Enum.KeyCode.H})
        end 
    end

    local function BlockBreaker()
        if game:GetService("CollectionService"):HasTag(NPC, "Blocking") then
            RemoteEvent:FireServer("InputBegan", {["Input"] = Enum.KeyCode.R})
        else
            RemoteFunction:InvokeServer("Attack", "m1")
        end
    end

    deadCheck = LocalPlayer.PlayerGui.HUD.Main.DropMoney.Money.ChildAdded:Connect(function(child)
        local number = tonumber(string.match(child.Name,"%d+"))
            if number and NPC then
                deadCheck:Disconnect()
                beingTargeted = false

                if not dontDestroyOnKill then
                NPC:Destroy()
            end
        end
    end)

    while beingTargeted do
        task.wait()

        if not NPC:FindFirstChild("HumanoidRootPart") then
            deadCheck:Disconnect()
            beingTargeted = false
            NPC:Destroy()
            return true
        end

        if extraParameters then
            extraParameters()
        end

        task.spawn(HamonCharge)
        task.spawn(setStandMorphPosition)
        task.spawn(BlockBreaker)
    end
	return true
end

local function checkPrestige(level, prestige)
    if (level == 35 and prestige == 0) or (level == 40 and prestige == 1) or (level == 45 and prestige == 2) then
        SendWebhook("@everyone Congratulations you have prestiged!\nTook around `" ..
        (tick() - Data["Time"]) / 60 .. " minutes` or `" .. (tick() - Data["Time"]) / 3600 ..
        " hours` to go from `Prestige " .. Data["Prestige"] .. ", Level " .. Data["Level"] ..
        "`, to `Prestige " .. tostring(prestige + 1) .. ", Level 1!`"
        )
        endDialogue("Prestige", "Dialogue2", "Option1")
        return true
    else
        return false
    end
end

local function allocateSkills() --this should allocate the destructive shit stuff
LocalPlayer.Character.RemoteFunction:InvokeServer("LearnSkill", {["Skill"] = "Constant Rage III",["SkillTreeType"] = "Stand"})
LocalPlayer.Character.RemoteFunction:InvokeServer("LearnSkill", {["Skill"] = "Anger Issues III",["SkillTreeType"] = "Stand"})
    RemoteFunction:InvokeServer("LearnSkill", {["Skill"] = "Destructive Power V",["SkillTreeType"] = "Stand"})
    RemoteFunction:InvokeServer("LearnSkill", {["Skill"] = "Destructive Power IV",["SkillTreeType"] = "Stand"})
    RemoteFunction:InvokeServer("LearnSkill", {["Skill"] = "Destructive Power III",["SkillTreeType"] = "Stand"})
    RemoteFunction:InvokeServer("LearnSkill", {["Skill"] = "Destructive Power II",["SkillTreeType"] = "Stand"})
    RemoteFunction:InvokeServer("LearnSkill", {["Skill"] = "Destructive Power I",["SkillTreeType"] = "Stand"})
    
    if LocalPlayer.PlayerStats.Spec.Value == "Hamon (Jonathan Joestar)" then
        RemoteFunction:InvokeServer("LearnSkill", {["Skill"] = "Hamon Punch",["SkillTreeType"] = "Spec"})
        RemoteFunction:InvokeServer("LearnSkill", {["Skill"] = "Lung Capacity V", ["SkillTreeType"] = "Spec"})
        RemoteFunction:InvokeServer("LearnSkill", {["Skill"] = "Hamon Breathing V",["SkillTreeType"] = "Spec"})
        RemoteFunction:InvokeServer("AssignSkillKey", {["Type"] = "Spec",["Key"] = "Enum.KeyCode.L",["Skill"] = "Hamon Charge"})
    end
end

local function autoStory()
    if LocalPlayer.PlayerStats.Level.Value >= 25 and LocalPlayer.PlayerStats.Prestige.Value >= 1 and LocalPlayer.Backpack:FindFirstChild("Requiem Arrow") and autoRequiem == true and (LocalPlayer.PlayerStats.Stand.Value == "King Crimson" or LocalPlayer.PlayerStats.Stand.Value == "Star Platinum") then
        LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(500, 2010, 500)
        useItem("Requiem Arrow", "V")
        repeat task.wait() until (LocalPlayer.PlayerStats.Stand.Value ~= "King Crimson" or LocalPlayer.PlayerStats.Stand.Value ~= "Star Platinum")
        LocalPlayer.Character.Humanoid.Health = 0
        autoStory()
    else
        allocateSkills()
    end

    if LocalPlayer.PlayerStats.Spec.Value ~= "None" and LocalPlayer.PlayerStats.Level.Value >= 25 and LocalPlayer.PlayerStats.Level.Value ~= 50 then
        if not LocalPlayer.PlayerGui.HUD.Main.Frames.Quest.Quests:FindFirstChild("Take down 3 vampires") then
            endDialogue("William Zeppeli", "Dialogue4", "Option1")
            SendWebhook("Account: `" .. LocalPlayer.Name .. "`\nTook around: `".. (tick() - lastTick).. " seconds` to complete `Vampire Quest`")
            lastTick = tick()
        end

        killNPC("Vampire", 5, false)
        autoStory()
    end

    if LocalPlayer.PlayerStats.Level.Value < 25 and #LocalPlayer.PlayerGui.HUD.Main.Frames.Quest.Quests:GetChildren() <= 1 then
        repeat storyDialogue() task.wait(1) until #LocalPlayer.PlayerGui.HUD.Main.Frames.Quest.Quests:GetChildren() > 1
    end

    for _,questName in pairs(LocalPlayer.PlayerGui.HUD.Main.Frames.Quest.Quests:GetChildren()) do
        if questName.Name == "Help Giorno by Defeating Security Guards" then
            print('SECUITY GUARD')
            SendWebhook("Killing Security Guard `" .. LocalPlayer.PlayerStats.QuestProgress.Value.."/"..LocalPlayer.PlayerStats.QuestMaxProgress.Value .."`")
            killNPC("Security Guard", 15)
            storyDialogue()
            autoStory()

        elseif not getgenv().standList[LocalPlayer.PlayerStats.Stand.Value] and LocalPlayer.PlayerStats.Level.Value >= 3 then
            print('NO STAND?')
            task.wait(5)
        
            if countItems("Rokakaka") < 25 then
                print("DEBUG, ROKAKAKA GOT")
                local balls = farmItem("Rokakaka", 25)
                repeat task.wait() until balls
            end
            
            if countItems("Mysterious Arrow") < 25 then
                print("DEBUG, MYSTERIOUS ARROW GOT")
                repeat task.wait() until farmItem("Mysterious Arrow", 25)
            end
            
            if countItems("Mysterious Arrow") >= 25 and countItems("Mysterious Arrow") >= 25 then
                print("MAX ARROW AND ROKA, GOT")
                print("ATTEMPTING TO STAND FARM")
                dontTPOnDeath = false
                LocalPlayer.Character.Humanoid.Health = 0
            else
                Teleport()
            end
        
        elseif questName.Name == "Defeat Leaky Eye Luca" and getgenv().standList[LocalPlayer.PlayerStats.Stand.Value] then
            print("LEAKY EYE LUCA")
            SendWebhook("Killing `Leaky Eye Luca`")
            killNPC("Leaky Eye Luca", 15)
            storyDialogue()
            autoStory()

        elseif questName.Name == "Defeat Bucciarati" then
            print("BUCCIARATI")
            SendWebhook("Killing `Bucciarati`")
            killNPC("Bucciarati", 15)
            storyDialogue()
            autoStory()

        elseif questName.Name == "Collect $5,000 To Cover For Popo's Real Fortune" then
            print("WAH WAH I DONT HAVE ENOUGH MONEY")
            if LocalPlayer.PlayerStats.Money.Value < 5000 then
                SendWebhook("Collecting `$5000`")
                local function collectAndSell(toolName, amount)
                    if countItems(toolName) <= amount then
                        farmItem(toolName, amount)
                        Character.Humanoid:EquipTool(LocalPlayer.Backpack:FindFirstChild(toolName))
                        endDialogue("Merchant", "Dialogue5", "Option2")
                        storyDialogue()
                        autoStory()
                    end

                    if LocalPlayer.PlayerStats.Money.Value < 5000 then
                        storyDialogue()
                        autoStory()
                    end
                end
                task.wait(10)
                collectAndSell("Rokakaka", 25)
                collectAndSell("Diamond", 10)
                collectAndSell("Steel Ball", 10)
                collectAndSell("Quinton's Glove", 10)
                collectAndSell("Ribcage Of The Saint's Corpse", 10)
                collectAndSell("Ancient Scroll", 10)
            end
            storyDialogue()
            autoStory()

        elseif questName.Name == "Defeat Fugo And His Purple Haze" then
            print("FUGO")
            SendWebhook("Killing `Fugo`")
            killNPC("Fugo", 15)
            storyDialogue()
            autoStory()

        elseif questName.Name == "Defeat Pesci" then
            print("PESCIy")
            SendWebhook("Killing `Pesci`")
            killNPC("Pesci", 15)
            autoStory()

        elseif questName.Name == "Defeat Ghiaccio" then
            print("GHIACCIO")
            SendWebhook("Killing `Ghiaccio`")
            killNPC("Ghiaccio", 15)
            storyDialogue()
            autoStory()

        elseif questName.Name == "Defeat Diavolo" then
            SendWebhook("Killing `Diavolo`")
            killNPC("Diavolo", 15)
            endDialogue("Storyline #14", "Dialogue7", "Option1")
            if Character:WaitForChild("Requiem Arrow", 5) then
                LocalPlayer.Character.Humanoid.Health = 0
                Teleport()
            else
                autoStory()
            end
        elseif LocalPlayer.PlayerStats.Spec.Value == "None" and LocalPlayer.PlayerStats.Level.Value >= 25 then
            local function collectAndSell(toolName, amount)
                farmItem(toolName, amount)
                LocalPlayer.Character.Humanoid:EquipTool(LocalPlayer.Backpack:FindFirstChild(toolName))
                endDialogue("Merchant", "Dialogue5", "Option2")
            end

            --people dont have headband oh no
            if not LocalPlayer.Backpack:FindFirstChild("Zepellin's Headband") then
                SendWebhook("Farming `Zepellin's Headband` to purchase `Hamon`")
                task.wait(5)
                farmItem("Zepellin's Headband", 1)
            end

            --people are broke oh no
            if LocalPlayer.PlayerStats.Money.Value <= 10000 then
                print("WHERE DID THE MONEY GO FOR HAMON?")
                SendWebhook("Collecting `$10000` for `Hamon`")

                collectAndSell("Rokakaka", 25)
                collectAndSell("Steel Ball", 10)
                collectAndSell("Quinton's Glove", 10)
                collectAndSell("Pure Rokakaka", 10)
                collectAndSell("Ribcage Of The Saint's Corpse", 10)
                collectAndSell("Ancient Scroll", 10)
            end

            --finally, get it!
            if LocalPlayer.Backpack:FindFirstChild("Zepellin's Headband") then
                SendWebhook("Buying `Hamon`")
                endDialogue("Jonathan","Dialogue5","Option1")
                autoStory()
            else
                Teleport()
            end
        elseif LocalPlayer.PlayerStats.Level.Value == 50 then
            SendWebhook(
                "**Prestige 3, Level 50 reached!**" ..
                "\nTime: `" .. (Data["Time"])/60 .. " minutes or " .. (Data["Time"])/3600 .. " hours`" ..
                "\nFrom: `Prestige: ".. Data["Prestige"]  .. ", Level " .. Data["Level"] .. "`" ..
                "\nStand: `" .. LocalPlayer.PlayerStats.Stand.Value .. "`" ..
                "\nSpec: `" .. LocalPlayer.PlayerStats.Spec.Value .. "`" ..
                "\nAccount: `" .. LocalPlayer.Name .. "`"
            )
            pcall(function()
                delfile("AutoPres3NEWCF_"..LocalPlayer.Name..".txt")
            end)
        end
    end
end

task.spawn(function()
    while task.wait(3) do
        if checkPrestige(LocalPlayer.PlayerStats.Level.Value, LocalPlayer.PlayerStats.Prestige.Value) then
            print("Prestiged")
            Teleport()
        elseif LocalPlayer.PlayerStats.Level.Value == 50 then
            if not Character:FindFirstChild("FocusCam") then
                Character.FocusCam:Destroy()
                break
            end
        else
            print("not able to prestige yet")
        end
    end
end)

game.Workspace.Living.ChildAdded:Connect(function(character)
    if character.Name == LocalPlayer.Name then
        if LocalPlayer.PlayerStats.Level.Value == 50 then
            print("didnt reconnect")
        else
            if dontTPOnDeath then
                Teleport()
            else
                attemptStandFarm()
            end
        end
    end
end)

LocalPlayer.PlayerStats.Level:GetPropertyChangedSignal("Value"):Connect(function()
    SendWebhook("Account: `" .. LocalPlayer.Name .. "`\nNew level: `" .. LocalPlayer.PlayerStats.Level.Value .. "`\nCurrent prestige: `" .. LocalPlayer.PlayerStats.Prestige.Value .. "`")
end)

LocalPlayer.CharacterAdded:Connect(function()
    task.wait(1)
    for i,v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
    	if v:IsA("BasePart") then
        	v.CanCollide = false
    	end
    end
end)

autoStory()
